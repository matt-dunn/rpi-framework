<?php

namespace RPI\Framework\Test\WebServer\RPI\Framework\Cache\Front;

/**
 * Test class for Store.
 * Generated by PHPUnit on 2012-12-04 at 08:37:42.
 */
class StoreTest extends \RPI\Framework\Test\Base
{
    /**
     * @var Store
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        \RPI\Framework\Helpers\FileUtils::delTree(__DIR__."/.cache");
        \RPI\Framework\Cache\Front\Store::setFileCachePath(__DIR__."/.cache");
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    public static function tearDownAfterClass()
    {
        \RPI\Framework\Helpers\FileUtils::delTree(__DIR__."/.cache");
    }

    /**
     * @todo Implement testGetProvider().
     */
    public function testGetProvider()
    {
        $this->assertInstanceOf(
            "\RPI\Framework\Cache\Front\Provider\File",
            \RPI\Framework\Cache\Front\Store::getProvider()
        );
    }

    /**
     * @todo Implement testSetProvider().
     */
    public function testSetProvider()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testValidateCacheItem().
     */
    public function testValidateCacheItem()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testFetch().
     */
    public function testFetch()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testFetchContent().
     */
    public function testFetchContent()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    // Test timestamp resolution.
    // Depending on the OS etc. the file system timestamp may not be precise enough
    // ensure items are invalidated in the cache against a timestamp when store/fectch
    // methods are executed too quickly
    public function testfetchContentWithTimestamp()
    {
        // 1. Emulate a service update by storing the time of the service 'update'
        $timestamp = (int) microtime(true);
        // 2. Store an item in the cache - this should be false as this is the first time this key is defined
        $this->assertFalse(\RPI\Framework\Cache\Front\Store::fetchContent("test", $timestamp));
        // 3. Emulate some code execution
        time_nanosleep(0, 500000);
        // 4. Stick a value in the cache and check it is safely stored. The cache file will have a timestamp of 'now'
        $ret = \RPI\Framework\Cache\Front\Store::store("test", "test value");
        $this->assertEquals(__DIR__."/.cache", dirname($ret));
        $this->assertTrue(file_exists($ret));

        // 5. This coule be a pause due to code execution in the current process or a new process
        time_nanosleep(0, 500000);
        // 6. Emulate the service updating content
        $timestamp = (int) microtime(true);
        // 7. Check that the item in the cache has expired
        $this->assertFalse(\RPI\Framework\Cache\Front\Store::fetchContent("test", $timestamp));
    }

    /**
     * @todo Implement testStore().
     */
    public function testStore()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testClear().
     */
    public function testClear()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testDelete().
     */
    public function testDelete()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }
}
