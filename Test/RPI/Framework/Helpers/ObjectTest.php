<?php
// @codingStandardsIgnoreFile

namespace RPI\Framework\Test\RPI\Framework\Helpers;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-29 at 15:06:31.
 */
class ObjectTest extends \RPI\Framework\Test\Base
{

    /**
     * @var Object
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
//        $this->object = new \RPI\Framework\Helpers\Object;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    public function test()
    {
        $o = new MyClass();
        $o->setProp1("Property 1");
        //echo $o->getProp1()."\n";
        $o->setProp2("Property 2");
        //echo $o->getProp2()."\n";
        $o->setProp3("Property 3");
        //echo $o->getProp3()."\n";

        $o->prop1 = "Property 1.2";
        //echo $o->prop1."\n";
        $o->prop2 = "Property 2.2";
        //echo $o->prop2."\n";
        $o->prop3 = "Property 3.2";
        //echo $o->prop3."\n";

        $s = serialize($o);
        //var_dump($s);

        var_dump(unserialize($s));

        var_dump(\RPI\Framework\Helpers\Dom::toXml(
            $o,
            array()
        )->saveXML());

        $o = new MyClass2();
        $o->setProp1("2Property 1");
        //echo $o->getProp1()."\n";
        $o->setProp2("2Property 2");
        //echo $o->getProp2()."\n";
        $o->setProp3("2Property 3");
        //echo $o->getProp3()."\n";
        $o->setProp4("2Property 4");
        //echo $o->getProp4()."\n";
        $o->setProp5("2Property 5");
        //echo $o->getProp5()."\n";

        $o->prop1 = "2Property 1.2";
        //echo $o->prop1."\n";
        $o->prop2 = "2Property 2.2";
        //echo $o->prop2."\n";
        $o->prop3 = "2Property 3.2";
        //echo $o->prop3."\n";
        $o->prop4 = new \DOMDocument();
        $o->prop4->loadXML("<hello world=\"yes\"/>");
        $o->prop5 = new MyClass();
        $o->prop5->prop1 = "Hello";
        $o->prop5->prop2 = "the";
        $o->prop5->prop3 = "world";
        //var_dump($o->prop5);

        $s = serialize($o);
        //var_dump($s);

        $u =unserialize($s);
        var_dump($u);
        var_dump($u->prop4->saveXML());

        var_dump(\RPI\Framework\Helpers\Dom::toXml(
            $o,
            array()
        )->saveXML());
    }
    
    /**
     * @covers RPI\Framework\Helpers\Object::__get
     * @todo   Implement test__get().
     */
    public function test__get()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers RPI\Framework\Helpers\Object::__set
     * @todo   Implement test__set().
     */
    public function test__set()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers RPI\Framework\Helpers\Object::__isset
     * @todo   Implement test__isset().
     */
    public function test__isset()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers RPI\Framework\Helpers\Object::__unset
     * @todo   Implement test__unset().
     */
    public function test__unset()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers RPI\Framework\Helpers\Object::__sleep
     * @todo   Implement test__sleep().
     */
    public function test__sleep()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers RPI\Framework\Helpers\Object::serialize
     * @todo   Implement testSerialize().
     */
    public function testSerialize()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers RPI\Framework\Helpers\Object::unserialize
     * @todo   Implement testUnserialize().
     */
    public function testUnserialize()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

}

/**
 * 
 */
class MyClass extends \RPI\Framework\Helpers\Object
{
    private $prop1 = null;
    private $prop2 = null;
    protected $prop3 = null;
        
    public function getProp1()
    {
//        echo __METHOD__."\n";
        return $this->prop1;
    }
    
    public function setProp1($prop1)
    {
//        echo __METHOD__."\n";
        $this->prop1 = $prop1;
    }
    
    public function getProp2()
    {
//        echo __METHOD__."\n";
        return $this->prop2;
    }
    
    public function setProp2($prop2)
    {
//        echo __METHOD__."\n";
        $this->prop2 = $prop2;
    }
    
    public function getProp3()
    {
//        echo __METHOD__."\n";
        return $this->prop3;
    }

    public function setProp3($prop3)
    {
//        echo __METHOD__."\n";
        $this->prop3 = $prop3;
    }
}

/**
 * @property string $prop4 Description
 * @property MyClass $prop5 Description
 */
class MyClass2 extends MyClass
{
    private $prop4 = null;
    private $prop5 = null;
    
    public function getProp4()
    {
//        echo __METHOD__."\n";
        return $this->prop4;
    }

    public function setProp4($prop4)
    {
//        echo __METHOD__."\n";
        $this->prop4 = $prop4;
    }

    public function getProp5()
    {
//        echo __METHOD__."\n";
        return $this->prop5;
    }

    public function setProp5($prop5)
    {
//        echo __METHOD__."\n";
        $this->prop5 = $prop5;
    }
}
